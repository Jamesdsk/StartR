R 코딩 스타일

1. R 스크립트 파일명은 .R 확장자로 끝낸다.
	a. 파일명은 중간에 대시(-)나 밑줄(_)을 사용해도 좋다.
	b. 파일명은 의미 있어야 한다.
	c. 여러 개의 파일을 순차적으로 실행할 경우에는 숫자를 앞에 붙인다.
		(예) 0-download.R, 1-parse.R, 2-explore.R
2. 변수명은 variable_name, 함수명은 function_name, 상수는 CONSTANT_NAME 형태를 사용한다.
	a. variable.name, variableName, FunctionName, ConstantName등은 사용하지 않는다.
	b. 변수명은 명사, 함수명은 동사로 한다. 짤지만 의미 있는 이름을 사용한다.
		(예) calculate_avg_clicks)
	c. 가능한 한 기존 함수나 변수명과 중복되는 이름을 피한다. 
		(R에서는 내장함수/변수/수식의 개수가 많으므로 어렵다. date, t, T, c등은 모두 내장 키워드다)
3. 한 줄은 최대 80글자로 제한한다.
	a. 참고로, R 스튜디오에서는 80줄을 표시해주는 옵션이 있다.
4. 들였기는 두 스페이스, 탭은 사용하지 않는다.
5. 띄어쓰기
	a. 이항 연산자 =, +, -, % 등은 양쪽에 한 칸씩 비운다.
	   예외로 함수 호출 시 옵션 지정에 사용하는 =는 빈칸 없이 사용해도 좋다.
	b. 콤마 다음에는 항상 한 칸을 띄어쓴다. 
		(예) x[1, ]
	c. 함수 호출 이외에 괄호 앞은 한 칸을 띄어쓴다.
		(예) if (debug)
	d. 이항 연산자 ::과 :는 빈칸이 필요없다.
		(예) x = 1:10, dplyr::mutate
6. 중괄호 {} 는 같은 줄에서 열고, 별도의 줄에서 닫는다. 
7. else 절은 중괄호로 감싸준다.
8. 할당은 <-를 사용한다.
	a. 할당에 =를 사용하지 않는다.
9. 세미콜론(;)을 사용하지 않는다.
10. 코드 레이아웃과 순서
	a. 저작권 정보
	b. 저자 정보
	c. 파일 정보: 코드의 목적, 입력, 출력
	d. source()와 library() 문
	e. 함수 정의
		1) 함수가 많을 때는 별도의 스크립트, 예를 들어 my_function.R을 사용해도 좋다.
		   source("my_function.R")로 읽어 들인다.
	f. 실행문들
	g. 유닛 테스트를 한다면 별도의 파일 originalfilename_test.R을 사용한다.
11. 주석은 # 다음에 한 칸을 띄고 시작한다. 인라인 주석은 # 전에 두 칸을 띈다.
12. 함수 정의와 호출: 함수 정의는 디폴트가 없는 인수들을 먼저 정의하고, 디폴트가 있는 인수를 
	나중에 정의한다.
13. 함수 주석: 함수를 정의하는 줄 바로 밑에 주석을 단다. 한 문장으로 함수를 기술하고, 
	Args: 밑에 함수의 각 인자와 변수형을 기술하고, Returns: 밑에 리턴값을 기술한다.
14. R의 attach() 함수는 사용하지 않는다.
15. 함수 에러 시에는 stop()을 호출한다.
16. (고급) R의 객체지향 방법은 S3와 S4가 있다. 가능한 한 S3를 사용한다.
	절대 S3와 S4를 혼용하지 않는다.

파이썬 스타일 가이드와 도구

PEP 0008: 파이썬 스타일 가이드

스타일 가이드를 돕는 도구로 pylint(http://www.pylint.org)를 많이 사용한다.
